# [ACTIVE] VELOS Notion ÏÉÅÌÉú ÌôïÏù∏ ÏãúÏä§ÌÖú - Notion DB ÏÉÅÌÉú Í≤ÄÏÇ¨ Ïä§ÌÅ¨Î¶ΩÌä∏
# -*- coding: utf-8 -*-
"""
Notion DB ÏÉÅÌÉú ÏòµÏÖò ÌôïÏù∏ Ïä§ÌÅ¨Î¶ΩÌä∏
"""

import os

import requests
from env_loader import load_env


def main():
    load_env()

    token = os.getenv("NOTION_TOKEN")
    database_id = os.getenv("NOTION_DATABASE_ID")

    if not token or not database_id:
        print("‚ùå ÌïÑÏàò ÌôòÍ≤ΩÎ≥ÄÏàò ÎàÑÎùΩ")
        return

    headers = {
        "Authorization": f"Bearer {token}",
        "Notion-Version": "2022-06-28",
    }

    try:
        # Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
        response = requests.get(
            f"https://api.notion.com/v1/databases/{database_id}", headers=headers
        )

        if response.status_code != 200:
            print(f"‚ùå API Ìò∏Ï∂ú Ïã§Ìå®: {response.status_code}")
            return

        data = response.json()
        properties = data.get("properties", {})

        print("üîç Notion DB ÏÉÅÌÉú ÏòµÏÖò ÌôïÏù∏")
        print("=" * 40)

        # ÏÉÅÌÉú ÏÜçÏÑ± Ï∞æÍ∏∞
        status_prop = None
        for prop_name, prop_data in properties.items():
            if prop_data.get("type") == "status":
                status_prop = prop_data
                print(f"üìä ÏÉÅÌÉú ÏÜçÏÑ±: {prop_name}")
                break

        if status_prop:
            options = status_prop.get("status", {}).get("options", [])
            print(f"‚úÖ ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÏÉÅÌÉú ÏòµÏÖò ({len(options)}Í∞ú):")
            for option in options:
                name = option.get("name", "")
                color = option.get("color", "")
                print(f"   ‚Ä¢ {name} ({color})")
        else:
            print("‚ùå ÏÉÅÌÉú ÏÜçÏÑ±ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§")

        # Îã§Î•∏ ÏÜçÏÑ±Îì§ÎèÑ ÌôïÏù∏
        print(f"\nüìã Ï†ÑÏ≤¥ ÏÜçÏÑ± ({len(properties)}Í∞ú):")
        for prop_name, prop_data in properties.items():
            prop_type = prop_data.get("type", "unknown")
            print(f"   ‚Ä¢ {prop_name} -> {prop_type}")

    except Exception as e:
        print(f"‚ùå Ïò§Î•ò: {e}")


if __name__ == "__main__":
    main()
